/*
 * DialogAdvanceDollieGenerator.java
 *
 * Created on August 12, 2008, 3:18 PM
 */

package mlnr.gui.dlg;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import mlnr.Measurement;

/**
 *
 * @author  Rob
 */
public class DialogAdvanceDollieGenerator extends javax.swing.JDialog {

    ButtonGroup bgStep1a = new ButtonGroup();
    ButtonGroup bgStep1b = new ButtonGroup();
    ButtonGroup bgStep3 = new ButtonGroup();
    boolean bOk = false;
    /** Used for paths, use straight lines. */
    public static final int STRAIGHT = 1;
    /** Used for paths, use curved lines. */
    public static final int CURVED = 2;
    /** Used to determine what to generate, whole pie. */
    public static final int WHOLE_PIE = 1;
    /** Used to determine what to generate, slice. */
    public static final int SLICE = 2;
    /** Used to determine what to generate, inner pie. */
    public static final int INNER_PIE = 4;
    /** Used to determine where to place the dollies at, new layers. */
    public static final int NEW_LAYER = 2;
    /** Used to determine where to place the dollies at, new drawing. */
    public static final int NEW_DRAWING = 3;
    /** This is the number slices. */
    private int sliceCount = 0;
    /** This is the inner radius in measurements. */
    private float innerRadius = 0.0f;
    /** This is the outer radious in measurements. */
    private float outerRadius = 0.0f;

    /** Creates new form DialogAdvanceDollieGenerator */
    public DialogAdvanceDollieGenerator(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        bgStep1a.add(jRadioButtonOuterCurved);
        bgStep1a.add(jRadioButtonOuterStraight);
        bgStep1b.add(jRadioButtonInnerCurved);
        bgStep1b.add(jRadioButtonInnerStraight);
        bgStep3.add(jRadioButtonNewDrawing);
        bgStep3.add(jRadioButtonNewLayer);

        jLabelMeasurement1.setText(Measurement.getTextualName());
        jLabelMeasurement2.setText(Measurement.getTextualName());
        
        jFormattedTextFieldInnerDiameter.setValue(0.00);
        jFormattedTextFieldOuterDiameter.setValue(0.00);
        jFormattedTextFieldPiePiece.setValue(4);
        
        setLocation(DialogUtil.centerDialog(parent.getBounds(), getBounds()));

    }

    /** @return the inner radius of the dollie in measurements.
     */
    public float getInnerRadius() {
        return innerRadius;
    }

    /** @return the outer radius of the dollie in measurements.
     */
    public float getOuterRadius() {
        return outerRadius;
    }
    
    /** This will get the slice count.
     * @return the number of slices.
     */
    public int getSliceCount() {
        return sliceCount;
    }

    /** @return true if the user clicked on generate Dollie.
     */
    public boolean isOk() {
        return bOk;
    }

    /** Only the new drawing is selected.
     */
    public void enableNewDrawingOnly() {
        jRadioButtonNewLayer.setVisible(false);
        jRadioButtonNewDrawing.setSelected(true);
    }

    /** This will determine where to place the dollies at.
     * @return CURRENT_LAYER, or NEW_LAYER, or NEW_DRAWING.
     */
    public int getPlacement() {
        if (jRadioButtonNewLayer.isSelected())
            return NEW_LAYER;
        if (jRadioButtonNewDrawing.isSelected())
            return NEW_DRAWING;

        throw new IllegalStateException("No radio button selected.");
    }

    /** This will get the users input for what the outer path should be.
     * @return CURVED or STRAIGHT.
     */
    public int getInnerPath() {
        if (jRadioButtonInnerCurved.isSelected())
            return CURVED;
        return STRAIGHT;
    }

    /** This will get the users input for what the outer path should be.
     * @return CURVED or STRAIGHT.
     */
    public int getOuterPath() {
        if (jRadioButtonOuterCurved.isSelected())
            return CURVED;
        else
            return STRAIGHT;
    }

    /** This will return what needs to be generated.
     * @return WHOLE_PIE and/or SLICE and/or INNER_PIE.
     */
    public int getGenerate() {
        int returnValue = 0;

        if (jCheckBoxWholePie.isSelected())
            returnValue |= WHOLE_PIE;
        if (jCheckBoxSlice.isSelected())
            returnValue |= SLICE;
        if (jCheckBoxInnerPie.isSelected())
            returnValue |= INNER_PIE;

        return returnValue;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jRadioButtonOuterStraight = new javax.swing.JRadioButton();
        jRadioButtonOuterCurved = new javax.swing.JRadioButton();
        jRadioButtonInnerStraight = new javax.swing.JRadioButton();
        jRadioButtonInnerCurved = new javax.swing.JRadioButton();
        jFormattedTextFieldPiePiece = new javax.swing.JFormattedTextField();
        jFormattedTextFieldOuterDiameter = new javax.swing.JFormattedTextField();
        jFormattedTextFieldInnerDiameter = new javax.swing.JFormattedTextField();
        jLabelMeasurement1 = new javax.swing.JLabel();
        jLabelMeasurement2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxWholePie = new javax.swing.JCheckBox();
        jCheckBoxInnerPie = new javax.swing.JCheckBox();
        jCheckBoxSlice = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonNewLayer = new javax.swing.JRadioButton();
        jRadioButtonNewDrawing = new javax.swing.JRadioButton();
        jButtonGenerateDollie = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Advance Doily Generator");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 1 - Advance Doily"));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mlnr/img/dlg/AdvanceDollie.gif"))); // NOI18N

        jLabel2.setText("Outer Path:");

        jLabel3.setText("Inner Path:");

        jLabel4.setText("Pie Piece Count:");

        jLabel5.setText("Outer Diameter:");

        jLabel6.setText("Inner Diameter:");

        jRadioButtonOuterStraight.setText("Straight");
        jRadioButtonOuterStraight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOuterStraightActionPerformed(evt);
            }
        });

        jRadioButtonOuterCurved.setSelected(true);
        jRadioButtonOuterCurved.setText("Curved");
        jRadioButtonOuterCurved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOuterCurvedActionPerformed(evt);
            }
        });

        jRadioButtonInnerStraight.setText("Straight");

        jRadioButtonInnerCurved.setSelected(true);
        jRadioButtonInnerCurved.setText("Curved");
        jRadioButtonInnerCurved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonInnerCurvedActionPerformed(evt);
            }
        });

        jFormattedTextFieldPiePiece.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jFormattedTextFieldOuterDiameter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jFormattedTextFieldInnerDiameter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabelMeasurement1.setText("jLabel7");

        jLabelMeasurement2.setText("jLabel8");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextFieldInnerDiameter, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jFormattedTextFieldOuterDiameter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButtonInnerStraight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonInnerCurved))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButtonOuterStraight)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonOuterCurved))
                            .addComponent(jFormattedTextFieldPiePiece, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelMeasurement2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMeasurement1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jRadioButtonOuterStraight)
                    .addComponent(jRadioButtonOuterCurved))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRadioButtonInnerStraight)
                    .addComponent(jRadioButtonInnerCurved))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextFieldPiePiece, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelMeasurement1)
                    .addComponent(jFormattedTextFieldOuterDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelMeasurement2)
                    .addComponent(jFormattedTextFieldInnerDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 2 - Generate"));

        jCheckBoxWholePie.setSelected(true);
        jCheckBoxWholePie.setText("Whole Pie");

        jCheckBoxInnerPie.setSelected(true);
        jCheckBoxInnerPie.setText("Inner Pie");

        jCheckBoxSlice.setSelected(true);
        jCheckBoxSlice.setText("Pie Piece");
        jCheckBoxSlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSliceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxWholePie)
                    .addComponent(jCheckBoxInnerPie)
                    .addComponent(jCheckBoxSlice))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jCheckBoxWholePie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxInnerPie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSlice)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Step 3 - Placement"));

        jRadioButtonNewLayer.setSelected(true);
        jRadioButtonNewLayer.setText("New Layer(s)");

        jRadioButtonNewDrawing.setText("New Drawing(s)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonNewLayer)
                    .addComponent(jRadioButtonNewDrawing))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jRadioButtonNewLayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonNewDrawing)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jButtonGenerateDollie.setText("Generate Doily");
        jButtonGenerateDollie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateDollieActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonCancel)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButtonGenerateDollie))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerateDollie)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jRadioButtonOuterStraightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOuterStraightActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jRadioButtonOuterStraightActionPerformed

private void jRadioButtonOuterCurvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOuterCurvedActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jRadioButtonOuterCurvedActionPerformed

private void jRadioButtonInnerCurvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonInnerCurvedActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jRadioButtonInnerCurvedActionPerformed

private void jButtonGenerateDollieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateDollieActionPerformed
// TODO add your handling code here:
    sliceCount = Integer.parseInt(jFormattedTextFieldPiePiece.getValue().toString());
    float innerDiameter = Measurement.convReal(Float.parseFloat(jFormattedTextFieldInnerDiameter.getValue().toString()));
    float outerDiameter = Measurement.convReal(Float.parseFloat(jFormattedTextFieldOuterDiameter.getValue().toString()));
    outerRadius = (outerDiameter - innerDiameter) / 2.0f;
    innerRadius = innerDiameter / 2.0f;

    if (outerDiameter <= innerDiameter) {
        JOptionPane.showMessageDialog(this, "Please set outer diameter greater than inner diameter.");
        return;
    }
    
    // Validate the number of slices.
    if (sliceCount < 4) {
        JOptionPane.showMessageDialog(this, "Please choose a value greater than equal to 4 for pie piece count.");
        return;
    }
    
    // Validate the size of the inner radius.
    if (innerRadius <= 0) {
        JOptionPane.showMessageDialog(this, "Please choose a value greater than 0 for the inner diameter.");
        return;
    }
    
    // Validate the size of the outer radius.
    if (outerRadius <= 0) {
        JOptionPane.showMessageDialog(this, "Please choose a value greater than 0 for the outer diameter.");
        return;
    }
    
    bOk = true;
    setVisible(false);
}//GEN-LAST:event_jButtonGenerateDollieActionPerformed

private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
// TODO add your handling code here:
    setVisible(false);
}//GEN-LAST:event_jButtonCancelActionPerformed

private void jCheckBoxSliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSliceActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jCheckBoxSliceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogAdvanceDollieGenerator dialog = new DialogAdvanceDollieGenerator(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }

                });
                dialog.setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonGenerateDollie;
    private javax.swing.JCheckBox jCheckBoxInnerPie;
    private javax.swing.JCheckBox jCheckBoxSlice;
    private javax.swing.JCheckBox jCheckBoxWholePie;
    private javax.swing.JFormattedTextField jFormattedTextFieldInnerDiameter;
    private javax.swing.JFormattedTextField jFormattedTextFieldOuterDiameter;
    private javax.swing.JFormattedTextField jFormattedTextFieldPiePiece;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelMeasurement1;
    private javax.swing.JLabel jLabelMeasurement2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonInnerCurved;
    private javax.swing.JRadioButton jRadioButtonInnerStraight;
    private javax.swing.JRadioButton jRadioButtonNewDrawing;
    private javax.swing.JRadioButton jRadioButtonNewLayer;
    private javax.swing.JRadioButton jRadioButtonOuterCurved;
    private javax.swing.JRadioButton jRadioButtonOuterStraight;
    // End of variables declaration//GEN-END:variables
}
