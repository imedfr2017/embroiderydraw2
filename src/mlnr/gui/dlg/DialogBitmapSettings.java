/*
 * DialogBitmapSettings.java
 *
 * Created on June 26, 2006, 4:11 PM
 */

package mlnr.gui.dlg;

import javax.swing.*;
import java.awt.*;
import java.util.*;
import mlnr.gui.BitmapSettings;
import mlnr.util.InterfaceSettings;

/**
 *
 * @author  Robert Molnar II
 */
public class DialogBitmapSettings extends javax.swing.JDialog {
    DefaultListModel defaultListBitmap = new DefaultListModel();
    java.awt.Frame frameParent;
    
    static private InterfaceSettings iSettings = null;
            
    /** Creates new form DialogBitmapSettings */
    public DialogBitmapSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        frameParent = parent;
        jListBitmapSettings.setModel(defaultListBitmap);
        loadListOfBitmapSettings();
        
        Rectangle rect = parent.getBounds();
        Rectangle dialogRect = getBounds();
        Point pt = new Point();
        pt.x = (int)(rect.getX() + (rect.getWidth() - dialogRect.getWidth()) / 2);
        pt.y = (int)(rect.getY() + (rect.getHeight() - dialogRect.getHeight()) / 2);        
        setLocation(pt);
    }
    
    /** This will initial the lightening settings. Should only be called once.
     */
    static public void initSettings() {
        iSettings = BitmapSettings.getSettings();
        iSettings.load();
    }
    
    void loadListOfBitmapSettings() {
        defaultListBitmap.clear();
        // Load in the bitmap settings.        
        for (Iterator itr = BitmapSettings.ltBitmapSettings.iterator(); itr.hasNext(); ) {
            BitmapSettings bitSet = (BitmapSettings)itr.next();
            defaultListBitmap.addElement(bitSet.getName());
        }
        
        jListBitmapSettings.setSelectedIndex(0);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBitmapSettings = new javax.swing.JList();
        jButtonEdit = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bitmap Settings");
        jListBitmapSettings.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListBitmapSettings);

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Remove");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 190, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jButtonOk, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButtonRemove, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButtonEdit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButtonAdd, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButtonEdit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonRemove)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonAdd)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButtonOk))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 202, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // Get the BitmapSettings.
        int index = jListBitmapSettings.getSelectedIndex();
        BitmapSettings bitSet = (BitmapSettings)BitmapSettings.ltBitmapSettings.get(index);
        
        DialogBitmapCustom dialog = new DialogBitmapCustom(frameParent, true);
        dialog.setBitmapSettings(bitSet);
        dialog.setVisible(true);

        if (bitSet.isLocked())
            return;
            
        if (dialog.isOk()) {
            BitmapSettings.editBitmapSettings(index, dialog.getBitmapSettings());
            loadListOfBitmapSettings();
        }
        
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
// TODO add your handling code here:
        int index = jListBitmapSettings.getSelectedIndex();
        BitmapSettings bitSet = (BitmapSettings)BitmapSettings.ltBitmapSettings.get(index);
        
        if (bitSet.isLocked()) {
            JOptionPane message = new JOptionPane();
            message.showMessageDialog(this, "This Bitmap Setting cannot be deleted.");
        } else {
            JOptionPane message = new JOptionPane();
            if (message.showConfirmDialog(this, "Are you sure you want to delete [" + bitSet.getName() + "]?", "Embroidery Draw", JOptionPane.YES_NO_CANCEL_OPTION) == JOptionPane.YES_OPTION) {
                BitmapSettings.removeBitmapSettings(index);
                loadListOfBitmapSettings();
            }
        }
        
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
// TODO add your handling code here:
        DialogBitmapCustom dialog = new DialogBitmapCustom(frameParent, true);
        dialog.setVisible(true);
        if (dialog.isOk()) {
            BitmapSettings.addBitmapSettings(dialog.getBitmapSettings());
            loadListOfBitmapSettings();
        }
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
// TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DialogBitmapSettings(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JList jListBitmapSettings;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
